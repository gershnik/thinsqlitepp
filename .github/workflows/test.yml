name: Test

on: 
  push:
    branches: 
      - '*'
      - '*/**'
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - 'LICENSE'
      - '.github/workflows/publish.yml'
      - 'tools/**'


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-latest
        - os: windows-latest
        - os: ubuntu-latest
          cc: gcc-11
          cxx: g++-11
        - os: ubuntu-latest
          cc: gcc-12
          cxx: g++-12
        - os: ubuntu-latest
          cc: gcc-13
          cxx: g++-13
        - os: ubuntu-latest
          cc: clang-13
          cxx: clang++-13
        - os: ubuntu-latest
          cc: clang-14
          cxx: clang++-14
        - os: ubuntu-latest
          cc: clang-15
          cxx: clang++-15

    steps:
    - uses: actions/checkout@v3

    - name: System Setup
      shell: bash
      run: |
        if [[ '${{ matrix.os }}' == 'ubuntu-latest' ]]; then
          if [[ '${{ matrix.cc }}' == 'clang-15' ]]; then
            sudo apt-get update
            sudo apt-get install -y clang-15 clang++-15
          fi

          if [[ '${{ matrix.cc }}' == 'gcc-13' ]]; then
            sudo apt-get update
            sudo apt-get install -y gcc-13 g++-13
          fi
        fi

    - name: Configure
      shell: bash
      run: |
        if [[ '${{ matrix.cc }}' != '' ]]; then
          export CC=${{ matrix.cc }}
        fi
        if [[ '${{ matrix.cxx }}' != '' ]]; then
          export CXX=${{ matrix.cxx }}
        fi
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release 

    - name: Build and Test
      shell: bash
      run: cmake --build build --config Release --target run-test

