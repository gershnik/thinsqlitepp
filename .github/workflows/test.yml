name: Test

on: 
  push:
    branches: 
      - '*'
      - '*/**'
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - '.gitignore'
      - 'LICENSE'
      - '.github/workflows/publish.yml'
      - 'tools/**'


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-latest
        - os: windows-latest
        - {os: ubuntu-latest, compiler: gcc, version: 11 }
        - {os: ubuntu-latest, compiler: gcc, version: 12 }
        - {os: ubuntu-latest, compiler: gcc, version: 13 }
        - {os: ubuntu-22.04, compiler: gcc, version: 14 }
        - {os: ubuntu-latest, compiler: clang, verson: 13 }
        - {os: ubuntu-latest, compiler: clang, verson: 14 }
        - {os: ubuntu-latest, compiler: clang, verson: 15 }
        - {os: ubuntu-latest, compiler: clang, verson: 16 }
        - {os: ubuntu-latest, compiler: clang, verson: 17 }
        - {os: ubuntu-latest, compiler: clang, verson: 18 }

    steps:
    - uses: actions/checkout@v4

    - name: System Setup
      shell: bash
      run: |
        if [[ '${{ matrix.os }}' == ubuntu-* ]]; then
          if [[ '${{ matrix.compiler }}' == 'clang' ]]; then
            wget https://apt.llvm.org/llvm.sh
            chmod u+x llvm.sh
            sudo ./llvm.sh ${{ matrix.version }} 
            sudo apt-get install -y clang-tools-${{ matrix.version }}
            echo "CC=clang-${{ matrix.version }}" >> $GITHUB_ENV
            echo "CXX=clang++-${{ matrix.version }}" >> $GITHUB_ENV
          fi

          if [[ '${{ matrix.compiler }}' == 'gcc' ]]; then
            sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
            sudo apt-get update
            sudo apt-get install -y gcc-${{ matrix.version }} g++-${{ matrix.version }}
            echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
            echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
          fi
        fi

    - name: Configure
      shell: bash
      run: |
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release 

    - name: Build and Test
      shell: bash
      run: cmake --build build --config Release --target run-test

